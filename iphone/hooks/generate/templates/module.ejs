<% if (!data.excludeHeader) { -%>
/**
 * HYPERLOOP GENERATED - DO NOT MODIFY
 *
 * This source code is Copyright (c) <%= new Date().getFullYear() %> by Appcelerator, Inc.
 * All Rights Reserved.  This code contains patents and/or patents pending.
 */
var $dispatch = Hyperloop.dispatch,
	$init,
	$class,
	$imports;

/**
 * <%= data.framework%>/<%= data.filename %>
 * @class
 */
function <%= data.class.name %> () {
	throw new TypeError('Cannot instantiate <%= data.class.name %>');
}

<%= data.class.name %>.toString = function() {
	return '[class <%= data.class.name %>]';
};

<% if (data.class.class_methods.length) { -%>
// class methods
<% data.class.class_methods.forEach(function (m) { %>
<%- m %>
<% }) %>
<% } -%>

<% if (data.class.properties.length || data.class.class_methods.length || Object.keys(data.class.static_variables).length) { -%>
function $initialize () {
	$imports = {};
<%- data.renderedImports %>

	$class = Hyperloop.createProxy({
		class: 'Hyperloop<%= data.class.name %>',
		alloc: false,
		init: 'class'
	});

	<%= data.class.name %>._class = $class;
	<%= data.class.name %>._imports = $imports;

	$init = true;
}
<% } -%>
<% } -%>

<% if (data.class.properties.length) { -%>
// properties
Object.defineProperties(<%= data.class.name %>, {
<% data.class.properties.forEach(function (p, index) { %>
	<%=p.name%>: {
	<%- p.getter %>,
	<% if (p.setter) {%><%- p.setter %>,<% } %>
		enumerable: false
	}<%=index + 1 < data.class.properties.length ? ',':''%>
<% }) %>
});
<% } -%>

<% if (data.class.static_variables && Object.keys(data.class.static_variables).length) { -%>
// static variables
Object.defineProperties(<%= data.class.name %>, {
<% var keys = Object.keys(data.class.static_variables);
keys.forEach(function (k, index) { %>
	<%=k%>: {
		value: <%=data.class.static_variables[k] %>,
		enumerable: false,
		writable: false
	}<%=index + 1 < keys.length ? ',':''%>
<% }) %>
});
<% } -%>

<% if (data.class.nested_types && Object.keys(data.class.nested_types).length) { -%>
// framework classes and structs
Object.defineProperties(<%= data.class.name %>, {
<% var keys = Object.keys(data.class.nested_types);
keys.forEach(function (nestedTypeName, index) { %>
	<%=nestedTypeName%>: {
		get: function() {
			return require('/hyperloop/<%= data.framework.toLowerCase() %>/<%= nestedTypeName.toLowerCase() %>');
		},
		enumerable: true
	}<%=index + 1 < keys.length ? ',':''%>
<% }) %>
});
<% } -%>

<% if (!data.excludeHeader) { -%>
Object.defineProperty(<%= data.class.name %>, '<%= data.class.name %>', {
	value: <%= data.class.name %>,
	enumerable: false,
	writable: false
});

module.exports = <%= data.class.name %>;
<% } -%>
